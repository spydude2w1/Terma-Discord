const Discord = require('discord.js');

const wordList = [
    "coin",
    "flip",
    "cents",
    "money",
    "dollar",
    "dollars",
    "cent",
    "price",
    "coin",
    "coins",
    "bank",
    "heads",
    "tails",
    "chip",
    "dime",
    "nickel",
    "penny",
    "quarter",
    "pennies",
    "cost",
    "shop",
    "cash",
    "register",
    "bill",
    "vault"
];

exports.minigame = async function(msg, type, options={before_time: 3000, after_time: 15000, color: 'RED', message: "<winner> said it first!", after: function(winner){}, list: wordList, embedTitle: "A minigame has been started!", embedDescription: "<host> started a minigame! Get ready!"}) {
  let looking_for = "";
  let notice = "";
  let sent = "";
  let before_time = options.before_time;
  if (!before_time || isNaN(before_time) || before_time < 1) before_time = 3000;
  let after_time = options.after_time;
  if (!after_time || isNaN(after_time) || after_time < 1) after_time = 15000;
  let color = options.color;
  if (!color || !isNaN(color)) color = "RED";
  let message = options.message;
  if (!message) message = "<winner> said it first!";
  let after = options.after;
  if (!after) after = function(winner){};
  let list = options.list;
  if (!list) list = wordList;
  let embedTitle = options.embedTitle;
  if (!embedTitle) embedTitle = "A minigame has been started!";
  let embedDescription = options.embedDescription;
  if (!embedDescription) embedDescription = "<host> started a minigame! Get ready!";
  embedDescription = embedDescription.replace("<host>", `<@${msg.author.id}>`);
  let embed = new Discord.MessageEmbed()
  .setTitle(embedTitle)
  .setDescription(embedDescription)
  .setColor(color);
  msg.channel.send(embed).catch(err => {});
  setTimeout(async () => {
    let typeList = ["repeat", "unscramble", "timing"];
    if (!typeList.includes(type)) type = "random";
    if (type == "random") {
      let random = Math.random() * 10;
      if (random < 3.33) type = "repeat";
      else if (random < 6.66) type = "unscramble";
      else type = "timing";
    }
    if (type == "repeat") {
      let random1 = list[Math.floor(Math.random() * list.length)];
      let random2 = list[Math.floor(Math.random() * list.length)];
      let random3 = list[Math.floor(Math.random() * list.length)];
      let random4 = list[Math.floor(Math.random() * list.length)];
      looking_for = `${random1} ${random2} ${random3} ${random4}`;
      sent = `${random1}⠀${random2}⠀${random3}⠀${random4}`;
      notice = "**Repeat after me!**";
    }
    if (type == "unscramble") {
      let randomWord = "";
      let shuffledWord = "";
      async function getWord() {
        let word = list[Math.floor(Math.random() * list.length)];
        let shuffled = await word.split('').sort(function(){return 0.5-Math.random()}).join('');
        if (word == shuffled) getWord();
        else {
          randomWord = word;
          shuffledWord = shuffled;
        }
      }
      await getWord();
      looking_for = randomWord;
      sent = shuffledWord;
      notice = "**Unscramble the word or phrase!**";
    }
    if (type == "timing") {
      let random = list[Math.floor(Math.random() * list.length)];
      notice = "When I say go, send the word or phrase below!";
      sent = random;
      msg.channel.send(`**${notice}**\n\n${sent}\n\nNot yet...`).catch(err => {}).then(sentMessage => {
        setTimeout(async () => {
          sentMessage.edit(`**${notice}**\n\n${sent}\n\n**GO!**`);
          looking_for = random;
        }, 2000);
      });
      msg.channel.awaitMessages(m => m.content.toLowerCase() == looking_for, {max: 1, time: after_time}).then(async collected => {
      let firstmsg = collected.first();
      if (!firstmsg) {
        msg.channel.send("No one said it in time!").catch(err => {});
        return;
      }
      let winner = firstmsg.author;
      let winnerMessage = message.replace("<winner>", `<@${winner.id}>`);
      msg.channel.send(winnerMessage).catch(err => {});
      await after;
      });
    } else {
      msg.channel.send(`**${notice}**\n\n${sent}`).catch(err => {});
      msg.channel.awaitMessages(m => m.content.toLowerCase() == looking_for, {max: 1, time: after_time}).then(async collected => {
      let firstmsg = collected.first();
      if (!firstmsg) {
      if (type == "unscramble") {
        msg.channel.send(`No one said it in time! The word was \`${looking_for}\`!`).catch(err => {});
      } else {
        msg.channel.send("No one said it in time!").catch(err => {});
      }
      return;
      }
      let winner = firstmsg.author;
      let winnerMessage = message.replace("<winner>", `<@${winner.id}>`);
      msg.channel.send(winnerMessage).catch(err => {});
      await after(firstmsg.author.id);
      });
    }
  }, before_time);
}